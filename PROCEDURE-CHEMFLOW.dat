STEPS CHEMFLOW :

1- ACTIVATE the environment you created for ChemFlow:

``conda activate ChemFlow``


2- ENTER in ChemFlow tutorial folder:

``cd ChemFlow/tutorial/example-a-thrombin/``

you will find the mol2 file for the ligands, prepared by PrepFlow (M. Sisquellas, M. Cecchini, Mol. Inf. 2021, 40, 2100139) and the pdb and mol2 of the receptor.

3- Run the DOCKING using DockFlow:

``DockFlow -p tutorial --protocol plants -r vmd-rec.mol2 -l all.mol2 --center 32.418 13.468 24.757 --radius 15``

``DockFlow -p tutorial --protocol vina -r vmd-rec.mol2 -l all.mol2 --center 32.418 13.468 24.757 --size 22.500 24.160 22.500 -sf vina -dp vina``

``DockFlow -p tutorial --protocol qvina -r vmd-rec.mol2 -l all.mol2 --center 32.418 13.468 24.757 --size 22.500 24.160 22.500 -sf vina -dp qvina``

``DockFlow -p tutorial --protocol smina -r vmd-rec.mol2 -l all.mol2 --center 32.418 13.468 24.757 --size 22.500 24.160 22.500 -dp smina``

For smina you can also run the Docking with a configuration file, in which you specify the center and the size of the box and a different scoring function to use:

``DockFlow -p tutorial --protocol config -r vmd-rec.mol2 -l all.mol2 --config_smina config.txt -dp smina``

Some examples of the configuration files that one can use are provided in the folder: 
ChemFlow/ChemFlow/templates/smina/

Modify the center and size of the box as well as the scoring function you want to use and other feautes you want to apply to run the docking with Smina. 

4- POSTPROCESS the results:

DockFlow -p tutorial --protocol plants -r vmd-rec.mol2 -l all.mol2 --center 32.418 13.468 24.757  --radius 15 --postprocess --overwrite -n 3

DockFlow -p tutorial --protocol vina -r vmd-rec.mol2 -l all.mol2 --center 32.418 13.468 24.757  --size 22.500 24.160 22.500 -sf vina -dp vina --postprocess --overwrite -n 3

DockFlow -p tutorial --protocol qvina -r vmd-rec.mol2 -l all.mol2 --center 32.418 13.468 24.757  --size 22.500 24.160 22.500 -sf vina -dp qvina --postprocess --overwrite -n 3

DockFlow -p tutorial --protocol smina -r vmd-rec.mol2 -l all.mol2 ---center 32.418 13.468 24.757  --size 22.500 24.160 22.500 -dp smina --postprocess --overwrite -n 3

For each of these commands you will be asked:

    Continue? > y

5- Compute bcc CHARGES for the ligands with LIGFLOW

igFlow can be used to build up a compound database with advanced charges such as AM1-BCC and RESP and their associated optimized structures, we'll see it's use latter to compute appropriate charges for the free energy calculations. Since these calculations are computationally expensive we recomend the users to use a cluster/supercomputer. In the examples bellow we demonstrate how to derive the AM1-BCC and RESP charges using the two most widespread queueing systems in supercomputers (PBS and SLURM)

LigFlow -l docked_ligands.mol2 -p tutorial --bcc --slurm
LigFlow -l docked_ligands.mol2 -p tutorial --bcc --pbs

For each of these commands you will be asked:

    Continue? > y


6- SCOREFLOW LOCALLY to rescore the previous docking poses (best 3 for each ligand)

# SCOREFLOW ChemPLP
ScoreFlow -p tutorial --protocol chemplp -sf chemplp --receptor vmd-rec.mol2 --ligand docked_ligands.mol2 --center 32.418 13.468 24.757

# SCOREFLOW Vina (Local only)
ScoreFlow --project tutorial --protocol vina_local_only -sf vina --vina-mode local_only --receptor vmd-rec.mol2 --ligand  docked_ligands.mol2 --center 32.418 13.468 24.757 --size 22.500 24.160 22.500

# ScoreFlow MM-GBSA 
cp docked_ligands.mol2 in the $WORKDIR

ScoreFlow --project tutorial --protocol mmgbsa_docked -sf mmgbsa --receptor receptor.pdb --ligand docked_ligands.mol2


Advanced

Using the \-\-write-only flag, all input files will be written in tutorial.chemflow/ScoreFlow/mmgbsa_md/receptor/:

    System Setup: You can modify the system setup (tleap.in file) inside your job.
    Simulation protocol: The procedures for each protocol can also be modified, the user must review "ScoreFlow.run.template".
    Run input files (Amber and MMGBSA): Namely min1.in, heat.in, equil.in, md.in ... can also be manually modified at wish :)
    After the modifications, rerun ScoreFlow using \-\-run-only.

