# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '/home/cedric/software/ChemFlow/ChemFlow/src/GUI/qt_creator/mainwindow.ui'
#
# Created by: PyQt5 UI code generator 5.11.2
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(662, 542)
        self.centralWidget = QtWidgets.QWidget(MainWindow)
        self.centralWidget.setObjectName("centralWidget")
        self.label_logo_2 = QtWidgets.QLabel(self.centralWidget)
        self.label_logo_2.setGeometry(QtCore.QRect(260, 10, 231, 51))
        font = QtGui.QFont()
        font.setPointSize(28)
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.label_logo_2.setFont(font)
        self.label_logo_2.setObjectName("label_logo_2")
        self.label_logo = QtWidgets.QLabel(self.centralWidget)
        self.label_logo.setGeometry(QtCore.QRect(180, 10, 61, 51))
        self.label_logo.setText("")
        self.label_logo.setPixmap(QtGui.QPixmap("../img/logo.png"))
        self.label_logo.setAlignment(QtCore.Qt.AlignCenter)
        self.label_logo.setObjectName("label_logo")
        self.tabWidget = QtWidgets.QTabWidget(self.centralWidget)
        self.tabWidget.setGeometry(QtCore.QRect(10, 70, 641, 421))
        self.tabWidget.setObjectName("tabWidget")
        self.tab_LigFlow = QtWidgets.QWidget()
        self.tab_LigFlow.setObjectName("tab_LigFlow")
        self.tabWidget.addTab(self.tab_LigFlow, "")
        self.tab_DockFlow = QtWidgets.QWidget()
        self.tab_DockFlow.setObjectName("tab_DockFlow")
        self.comboBox_docking_software = QtWidgets.QComboBox(self.tab_DockFlow)
        self.comboBox_docking_software.setGeometry(QtCore.QRect(92, 148, 221, 24))
        self.comboBox_docking_software.setObjectName("comboBox_docking_software")
        self.comboBox_docking_software.addItem("")
        self.comboBox_docking_software.addItem("")
        self.label_dockingKeep = QtWidgets.QLabel(self.tab_DockFlow)
        self.label_dockingKeep.setGeometry(QtCore.QRect(37, 176, 41, 31))
        self.label_dockingKeep.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_dockingKeep.setObjectName("label_dockingKeep")
        self.label_docking = QtWidgets.QLabel(self.tab_DockFlow)
        self.label_docking.setGeometry(QtCore.QRect(13, 98, 131, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_docking.setFont(font)
        self.label_docking.setObjectName("label_docking")
        self.spinBox_docking_nposes = QtWidgets.QSpinBox(self.tab_DockFlow)
        self.spinBox_docking_nposes.setGeometry(QtCore.QRect(92, 177, 70, 31))
        self.spinBox_docking_nposes.setMinimum(1)
        self.spinBox_docking_nposes.setMaximum(99999)
        self.spinBox_docking_nposes.setProperty("value", 10)
        self.spinBox_docking_nposes.setObjectName("spinBox_docking_nposes")
        self.label_dockingKeep_2 = QtWidgets.QLabel(self.tab_DockFlow)
        self.label_dockingKeep_2.setGeometry(QtCore.QRect(170, 177, 151, 31))
        self.label_dockingKeep_2.setObjectName("label_dockingKeep_2")
        self.pushButton_docking_configure_protocol = QtWidgets.QPushButton(self.tab_DockFlow)
        self.pushButton_docking_configure_protocol.setEnabled(True)
        self.pushButton_docking_configure_protocol.setGeometry(QtCore.QRect(317, 148, 91, 24))
        self.pushButton_docking_configure_protocol.setObjectName("pushButton_docking_configure_protocol")
        self.label_dockingSoftware = QtWidgets.QLabel(self.tab_DockFlow)
        self.label_dockingSoftware.setGeometry(QtCore.QRect(7, 150, 71, 20))
        self.label_dockingSoftware.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_dockingSoftware.setObjectName("label_dockingSoftware")
        self.label_inputFiles = QtWidgets.QLabel(self.tab_DockFlow)
        self.label_inputFiles.setGeometry(QtCore.QRect(13, 10, 75, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_inputFiles.setFont(font)
        self.label_inputFiles.setObjectName("label_inputFiles")
        self.pushButton_docking_lig = QtWidgets.QPushButton(self.tab_DockFlow)
        self.pushButton_docking_lig.setGeometry(QtCore.QRect(538, 60, 91, 21))
        self.pushButton_docking_lig.setWhatsThis("")
        self.pushButton_docking_lig.setObjectName("pushButton_docking_lig")
        self.label_lig = QtWidgets.QLabel(self.tab_DockFlow)
        self.label_lig.setGeometry(QtCore.QRect(13, 60, 65, 20))
        self.label_lig.setWhatsThis("")
        self.label_lig.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_lig.setObjectName("label_lig")
        self.pushButton_docking_rec = QtWidgets.QPushButton(self.tab_DockFlow)
        self.pushButton_docking_rec.setGeometry(QtCore.QRect(538, 30, 91, 21))
        self.pushButton_docking_rec.setWhatsThis("")
        self.pushButton_docking_rec.setObjectName("pushButton_docking_rec")
        self.label_rec = QtWidgets.QLabel(self.tab_DockFlow)
        self.label_rec.setGeometry(QtCore.QRect(13, 30, 65, 20))
        self.label_rec.setWhatsThis("")
        self.label_rec.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_rec.setObjectName("label_rec")
        self.label = QtWidgets.QLabel(self.tab_DockFlow)
        self.label.setGeometry(QtCore.QRect(13, 220, 181, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.label_3 = QtWidgets.QLabel(self.tab_DockFlow)
        self.label_3.setGeometry(QtCore.QRect(22, 122, 56, 17))
        self.label_3.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_3.setObjectName("label_3")
        self.lineEdit_docking_protocol = QtWidgets.QLineEdit(self.tab_DockFlow)
        self.lineEdit_docking_protocol.setGeometry(QtCore.QRect(92, 120, 316, 21))
        self.lineEdit_docking_protocol.setWhatsThis("")
        self.lineEdit_docking_protocol.setObjectName("lineEdit_docking_protocol")
        self.lineEdit_docking_rec = QtWidgets.QLineEdit(self.tab_DockFlow)
        self.lineEdit_docking_rec.setGeometry(QtCore.QRect(92, 30, 441, 21))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.lineEdit_docking_rec.setFont(font)
        self.lineEdit_docking_rec.setObjectName("lineEdit_docking_rec")
        self.lineEdit_docking_lig = QtWidgets.QLineEdit(self.tab_DockFlow)
        self.lineEdit_docking_lig.setGeometry(QtCore.QRect(92, 60, 441, 21))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.lineEdit_docking_lig.setFont(font)
        self.lineEdit_docking_lig.setObjectName("lineEdit_docking_lig")
        self.label_4 = QtWidgets.QLabel(self.tab_DockFlow)
        self.label_4.setGeometry(QtCore.QRect(-53, 250, 131, 17))
        self.label_4.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_4.setObjectName("label_4")
        self.comboBox_docking_job_queue = QtWidgets.QComboBox(self.tab_DockFlow)
        self.comboBox_docking_job_queue.setGeometry(QtCore.QRect(92, 246, 111, 24))
        self.comboBox_docking_job_queue.setObjectName("comboBox_docking_job_queue")
        self.comboBox_docking_job_queue.addItem("")
        self.comboBox_docking_job_queue.addItem("")
        self.comboBox_docking_job_queue.addItem("")
        self.pushButton_docking_configure_job_queue = QtWidgets.QPushButton(self.tab_DockFlow)
        self.pushButton_docking_configure_job_queue.setEnabled(True)
        self.pushButton_docking_configure_job_queue.setGeometry(QtCore.QRect(207, 246, 91, 24))
        self.pushButton_docking_configure_job_queue.setObjectName("pushButton_docking_configure_job_queue")
        self.checkBox_overwrite = QtWidgets.QCheckBox(self.tab_DockFlow)
        self.checkBox_overwrite.setGeometry(QtCore.QRect(90, 280, 251, 22))
        self.checkBox_overwrite.setObjectName("checkBox_overwrite")
        self.line = QtWidgets.QFrame(self.tab_DockFlow)
        self.line.setGeometry(QtCore.QRect(0, 320, 640, 3))
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.commandLinkButton_docking_run = QtWidgets.QCommandLinkButton(self.tab_DockFlow)
        self.commandLinkButton_docking_run.setGeometry(QtCore.QRect(100, 330, 111, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.commandLinkButton_docking_run.setFont(font)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("../img/run.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.commandLinkButton_docking_run.setIcon(icon)
        self.commandLinkButton_docking_run.setIconSize(QtCore.QSize(36, 36))
        self.commandLinkButton_docking_run.setObjectName("commandLinkButton_docking_run")
        self.commandLinkButton_docking_postprocess = QtWidgets.QCommandLinkButton(self.tab_DockFlow)
        self.commandLinkButton_docking_postprocess.setGeometry(QtCore.QRect(230, 330, 171, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.commandLinkButton_docking_postprocess.setFont(font)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("../img/process.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.commandLinkButton_docking_postprocess.setIcon(icon1)
        self.commandLinkButton_docking_postprocess.setIconSize(QtCore.QSize(36, 36))
        self.commandLinkButton_docking_postprocess.setObjectName("commandLinkButton_docking_postprocess")
        self.commandLinkButton_docking_archive = QtWidgets.QCommandLinkButton(self.tab_DockFlow)
        self.commandLinkButton_docking_archive.setGeometry(QtCore.QRect(430, 330, 131, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.commandLinkButton_docking_archive.setFont(font)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("../img/archive.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.commandLinkButton_docking_archive.setIcon(icon2)
        self.commandLinkButton_docking_archive.setIconSize(QtCore.QSize(36, 36))
        self.commandLinkButton_docking_archive.setObjectName("commandLinkButton_docking_archive")
        self.tabWidget.addTab(self.tab_DockFlow, "")
        self.tab_ScoreFlow = QtWidgets.QWidget()
        self.tab_ScoreFlow.setObjectName("tab_ScoreFlow")
        self.tabWidget.addTab(self.tab_ScoreFlow, "")
        self.tab_Tools = QtWidgets.QWidget()
        self.tab_Tools.setObjectName("tab_Tools")
        self.tabWidget.addTab(self.tab_Tools, "")
        self.tab_Output = QtWidgets.QWidget()
        self.tab_Output.setObjectName("tab_Output")
        self.output_display = QtWidgets.QPlainTextEdit(self.tab_Output)
        self.output_display.setGeometry(QtCore.QRect(-1, 38, 639, 351))
        self.output_display.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.output_display.setAutoFillBackground(False)
        self.output_display.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.output_display.setTabChangesFocus(False)
        self.output_display.setReadOnly(True)
        self.output_display.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextSelectableByMouse)
        self.output_display.setObjectName("output_display")
        self.lineEdit_command = QtWidgets.QLineEdit(self.tab_Output)
        self.lineEdit_command.setGeometry(QtCore.QRect(79, 5, 351, 27))
        self.lineEdit_command.setReadOnly(True)
        self.lineEdit_command.setObjectName("lineEdit_command")
        self.label_2 = QtWidgets.QLabel(self.tab_Output)
        self.label_2.setGeometry(QtCore.QRect(0, 8, 73, 20))
        self.label_2.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_2.setObjectName("label_2")
        self.label_5 = QtWidgets.QLabel(self.tab_Output)
        self.label_5.setGeometry(QtCore.QRect(430, 8, 51, 20))
        self.label_5.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_5.setObjectName("label_5")
        self.lineEdit_status = QtWidgets.QLineEdit(self.tab_Output)
        self.lineEdit_status.setGeometry(QtCore.QRect(487, 5, 91, 27))
        self.lineEdit_status.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_status.setReadOnly(True)
        self.lineEdit_status.setObjectName("lineEdit_status")
        self.pushButton_kill = QtWidgets.QPushButton(self.tab_Output)
        self.pushButton_kill.setEnabled(False)
        self.pushButton_kill.setGeometry(QtCore.QRect(583, 5, 51, 27))
        self.pushButton_kill.setObjectName("pushButton_kill")
        self.tabWidget.addTab(self.tab_Output, "")
        MainWindow.setCentralWidget(self.centralWidget)
        self.menuBar = QtWidgets.QMenuBar(MainWindow)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 662, 25))
        self.menuBar.setObjectName("menuBar")
        self.menuProject = QtWidgets.QMenu(self.menuBar)
        self.menuProject.setObjectName("menuProject")
        self.menuHelp = QtWidgets.QMenu(self.menuBar)
        self.menuHelp.setObjectName("menuHelp")
        MainWindow.setMenuBar(self.menuBar)
        self.statusBar = QtWidgets.QStatusBar(MainWindow)
        self.statusBar.setObjectName("statusBar")
        MainWindow.setStatusBar(self.statusBar)
        self.actionNew_project = QtWidgets.QAction(MainWindow)
        self.actionNew_project.setObjectName("actionNew_project")
        self.actionLoad_project = QtWidgets.QAction(MainWindow)
        self.actionLoad_project.setObjectName("actionLoad_project")
        self.actionGitHub = QtWidgets.QAction(MainWindow)
        self.actionGitHub.setObjectName("actionGitHub")
        self.actionReport_issue = QtWidgets.QAction(MainWindow)
        self.actionReport_issue.setObjectName("actionReport_issue")
        self.actionTutorial = QtWidgets.QAction(MainWindow)
        self.actionTutorial.setObjectName("actionTutorial")
        self.actionAbout = QtWidgets.QAction(MainWindow)
        self.actionAbout.setObjectName("actionAbout")
        self.actionDebug_mode = QtWidgets.QAction(MainWindow)
        self.actionDebug_mode.setObjectName("actionDebug_mode")
        self.actionExit = QtWidgets.QAction(MainWindow)
        self.actionExit.setObjectName("actionExit")
        self.actionLogfile = QtWidgets.QAction(MainWindow)
        self.actionLogfile.setObjectName("actionLogfile")
        self.menuProject.addAction(self.actionNew_project)
        self.menuProject.addAction(self.actionLoad_project)
        self.menuProject.addSeparator()
        self.menuProject.addAction(self.actionExit)
        self.menuHelp.addAction(self.actionGitHub)
        self.menuHelp.addAction(self.actionReport_issue)
        self.menuHelp.addAction(self.actionTutorial)
        self.menuHelp.addSeparator()
        self.menuHelp.addAction(self.actionDebug_mode)
        self.menuHelp.addAction(self.actionLogfile)
        self.menuHelp.addSeparator()
        self.menuHelp.addAction(self.actionAbout)
        self.menuBar.addAction(self.menuProject.menuAction())
        self.menuBar.addAction(self.menuHelp.menuAction())

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(1)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "ChemFlow"))
        self.label_logo_2.setText(_translate("MainWindow", "ChemFlow"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_LigFlow), _translate("MainWindow", "LigFlow"))
        self.comboBox_docking_software.setToolTip(_translate("MainWindow", "Software used for docking"))
        self.comboBox_docking_software.setItemText(0, _translate("MainWindow", "AutoDock Vina"))
        self.comboBox_docking_software.setItemText(1, _translate("MainWindow", "PLANTS"))
        self.label_dockingKeep.setText(_translate("MainWindow", "Keep"))
        self.label_docking.setText(_translate("MainWindow", "Docking protocol"))
        self.spinBox_docking_nposes.setToolTip(_translate("MainWindow", "Number of docked poses to generate or keep"))
        self.label_dockingKeep_2.setText(_translate("MainWindow", "pose(s) per ligand"))
        self.pushButton_docking_configure_protocol.setToolTip(_translate("MainWindow", "Configure your docking protocol"))
        self.pushButton_docking_configure_protocol.setText(_translate("MainWindow", "Configure"))
        self.label_dockingSoftware.setText(_translate("MainWindow", "Software"))
        self.label_inputFiles.setText(_translate("MainWindow", "Input files"))
        self.pushButton_docking_lig.setToolTip(_translate("MainWindow", "Ligands MOL2 file"))
        self.pushButton_docking_lig.setText(_translate("MainWindow", "Browse"))
        self.label_lig.setToolTip(_translate("MainWindow", "Ligands MOL2 file"))
        self.label_lig.setText(_translate("MainWindow", "Ligands"))
        self.pushButton_docking_rec.setToolTip(_translate("MainWindow", "Receptor MOL2 file"))
        self.pushButton_docking_rec.setText(_translate("MainWindow", "Browse"))
        self.label_rec.setToolTip(_translate("MainWindow", "Receptor MOL2 file"))
        self.label_rec.setText(_translate("MainWindow", "Receptor"))
        self.label.setText(_translate("MainWindow", "Configure execution"))
        self.label_3.setToolTip(_translate("MainWindow", "Name for this specific protocol"))
        self.label_3.setText(_translate("MainWindow", "Name"))
        self.lineEdit_docking_protocol.setToolTip(_translate("MainWindow", "Name for this specific protocol"))
        self.lineEdit_docking_protocol.setText(_translate("MainWindow", "default"))
        self.lineEdit_docking_rec.setToolTip(_translate("MainWindow", "Receptor MOL2 file"))
        self.lineEdit_docking_lig.setToolTip(_translate("MainWindow", "Ligands MOL2 file"))
        self.label_4.setText(_translate("MainWindow", "Job queue"))
        self.comboBox_docking_job_queue.setToolTip(_translate("MainWindow", "<html><head/><body><p>Batch system used to control your jobs:<ul><li>None: run locally in parallel</li><li>PBS: Portable Batch System for UNIX clusters</li><li>SLURM: Slurm Workload Manager for HPC clusters</li></ul></p></body></html>"))
        self.comboBox_docking_job_queue.setItemText(0, _translate("MainWindow", "None"))
        self.comboBox_docking_job_queue.setItemText(1, _translate("MainWindow", "PBS"))
        self.comboBox_docking_job_queue.setItemText(2, _translate("MainWindow", "SLURM"))
        self.pushButton_docking_configure_job_queue.setToolTip(_translate("MainWindow", "<html><head/><body><p>Configure the number of cores used...etc.</p></body></html>"))
        self.pushButton_docking_configure_job_queue.setText(_translate("MainWindow", "Configure"))
        self.checkBox_overwrite.setToolTip(_translate("MainWindow", "<html><head/><body><p>Overwrite results corresponding to the same project, protocol name and receptor name. Will overwrite docking poses, affinities... everything !</p><p><span style=\" font-style:italic;\">Usefull if you\'ve made an error in a protocol you\'ve just run and want to correct it without manually deleting files.</span></p></body></html>"))
        self.checkBox_overwrite.setText(_translate("MainWindow", "Overwrite pre-existing results"))
        self.commandLinkButton_docking_run.setToolTip(_translate("MainWindow", "Run the docking experiment"))
        self.commandLinkButton_docking_run.setText(_translate("MainWindow", "Dock"))
        self.commandLinkButton_docking_postprocess.setToolTip(_translate("MainWindow", "<html><head/><body><p>Process and standardize the outputs for the specified project, protocol, and receptor</p></body></html>"))
        self.commandLinkButton_docking_postprocess.setText(_translate("MainWindow", "Postprocess"))
        self.commandLinkButton_docking_archive.setToolTip(_translate("MainWindow", "<html><head/><body><p>Compress all files from the specified project, protocol, and receptor in a single tar.gz archive</p></body></html>"))
        self.commandLinkButton_docking_archive.setText(_translate("MainWindow", "Archive"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_DockFlow), _translate("MainWindow", "DockFlow"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_ScoreFlow), _translate("MainWindow", "ScoreFlow"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_Tools), _translate("MainWindow", "Tools"))
        self.label_2.setText(_translate("MainWindow", "Command"))
        self.label_5.setText(_translate("MainWindow", "Status"))
        self.pushButton_kill.setText(_translate("MainWindow", "Kill"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_Output), _translate("MainWindow", "Output"))
        self.menuProject.setTitle(_translate("MainWindow", "Project"))
        self.menuHelp.setTitle(_translate("MainWindow", "Help"))
        self.actionNew_project.setText(_translate("MainWindow", "New project"))
        self.actionLoad_project.setText(_translate("MainWindow", "Load project"))
        self.actionGitHub.setText(_translate("MainWindow", "GitHub"))
        self.actionReport_issue.setText(_translate("MainWindow", "Report issue"))
        self.actionTutorial.setText(_translate("MainWindow", "Tutorial"))
        self.actionAbout.setText(_translate("MainWindow", "About"))
        self.actionDebug_mode.setText(_translate("MainWindow", "Debug mode"))
        self.actionExit.setText(_translate("MainWindow", "Exit"))
        self.actionLogfile.setText(_translate("MainWindow", "Logfile"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())

