# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '/home/cedric/software/ChemFlow/ChemFlow/src/GUI/qt_creator/mainwindow.ui'
#
# Created by: PyQt5 UI code generator 5.11.2
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(662, 542)
        self.centralWidget = QtWidgets.QWidget(MainWindow)
        self.centralWidget.setObjectName("centralWidget")
        self.label_logo_text = QtWidgets.QLabel(self.centralWidget)
        self.label_logo_text.setGeometry(QtCore.QRect(260, 10, 231, 51))
        font = QtGui.QFont()
        font.setPointSize(28)
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.label_logo_text.setFont(font)
        self.label_logo_text.setObjectName("label_logo_text")
        self.label_logo = QtWidgets.QLabel(self.centralWidget)
        self.label_logo.setGeometry(QtCore.QRect(180, 10, 61, 51))
        self.label_logo.setText("")
        self.label_logo.setPixmap(QtGui.QPixmap("../img/logo.png"))
        self.label_logo.setAlignment(QtCore.Qt.AlignCenter)
        self.label_logo.setObjectName("label_logo")
        self.tabWidget = QtWidgets.QTabWidget(self.centralWidget)
        self.tabWidget.setGeometry(QtCore.QRect(10, 70, 641, 423))
        self.tabWidget.setObjectName("tabWidget")
        self.tab_Smiles = QtWidgets.QWidget()
        self.tab_Smiles.setObjectName("tab_Smiles")
        self.label_9 = QtWidgets.QLabel(self.tab_Smiles)
        self.label_9.setGeometry(QtCore.QRect(11, 95, 67, 17))
        self.label_9.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_9.setObjectName("label_9")
        self.comboBox_method = QtWidgets.QComboBox(self.tab_Smiles)
        self.comboBox_method.setGeometry(QtCore.QRect(90, 228, 85, 27))
        self.comboBox_method.setObjectName("comboBox_method")
        self.comboBox_method.addItem("")
        self.comboBox_method.addItem("")
        self.comboBox_method.addItem("")
        self.checkBox_verbose = QtWidgets.QCheckBox(self.tab_Smiles)
        self.checkBox_verbose.setGeometry(QtCore.QRect(349, 194, 151, 22))
        self.checkBox_verbose.setObjectName("checkBox_verbose")
        self.spinBox_smiles_col = QtWidgets.QSpinBox(self.tab_Smiles)
        self.spinBox_smiles_col.setGeometry(QtCore.QRect(158, 57, 48, 27))
        self.spinBox_smiles_col.setMinimum(1)
        self.spinBox_smiles_col.setProperty("value", 1)
        self.spinBox_smiles_col.setObjectName("spinBox_smiles_col")
        self.comboBox_delimiter = QtWidgets.QComboBox(self.tab_Smiles)
        self.comboBox_delimiter.setGeometry(QtCore.QRect(90, 89, 85, 27))
        self.comboBox_delimiter.setObjectName("comboBox_delimiter")
        self.comboBox_delimiter.addItem("")
        self.comboBox_delimiter.addItem("")
        self.comboBox_delimiter.addItem("")
        self.comboBox_delimiter.addItem("")
        self.comboBox_delimiter.addItem("")
        self.label_10 = QtWidgets.QLabel(self.tab_Smiles)
        self.label_10.setGeometry(QtCore.QRect(94, 288, 91, 20))
        self.label_10.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_10.setObjectName("label_10")
        self.checkBox_mpi = QtWidgets.QCheckBox(self.tab_Smiles)
        self.checkBox_mpi.setGeometry(QtCore.QRect(349, 289, 131, 22))
        self.checkBox_mpi.setObjectName("checkBox_mpi")
        self.lineEdit_smiles_input = QtWidgets.QLineEdit(self.tab_Smiles)
        self.lineEdit_smiles_input.setGeometry(QtCore.QRect(92, 30, 441, 21))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.lineEdit_smiles_input.setFont(font)
        self.lineEdit_smiles_input.setObjectName("lineEdit_smiles_input")
        self.checkBox_header = QtWidgets.QCheckBox(self.tab_Smiles)
        self.checkBox_header.setGeometry(QtCore.QRect(90, 120, 171, 22))
        self.checkBox_header.setObjectName("checkBox_header")
        self.checkBox_hydrogen = QtWidgets.QCheckBox(self.tab_Smiles)
        self.checkBox_hydrogen.setGeometry(QtCore.QRect(90, 194, 221, 22))
        self.checkBox_hydrogen.setObjectName("checkBox_hydrogen")
        self.spinBox_names_col = QtWidgets.QSpinBox(self.tab_Smiles)
        self.spinBox_names_col.setGeometry(QtCore.QRect(300, 57, 48, 27))
        self.spinBox_names_col.setMinimum(1)
        self.spinBox_names_col.setProperty("value", 2)
        self.spinBox_names_col.setObjectName("spinBox_names_col")
        self.label_rec_2 = QtWidgets.QLabel(self.tab_Smiles)
        self.label_rec_2.setGeometry(QtCore.QRect(13, 10, 51, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_rec_2.setFont(font)
        self.label_rec_2.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_rec_2.setObjectName("label_rec_2")
        self.label_11 = QtWidgets.QLabel(self.tab_Smiles)
        self.label_11.setGeometry(QtCore.QRect(11, 32, 67, 17))
        self.label_11.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_11.setObjectName("label_11")
        self.label_12 = QtWidgets.QLabel(self.tab_Smiles)
        self.label_12.setGeometry(QtCore.QRect(13, 261, 81, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_12.setFont(font)
        self.label_12.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_12.setObjectName("label_12")
        self.spinBox_nthreads = QtWidgets.QSpinBox(self.tab_Smiles)
        self.spinBox_nthreads.setGeometry(QtCore.QRect(190, 284, 48, 27))
        self.spinBox_nthreads.setMinimum(1)
        self.spinBox_nthreads.setProperty("value", 1)
        self.spinBox_nthreads.setObjectName("spinBox_nthreads")
        self.label_18 = QtWidgets.QLabel(self.tab_Smiles)
        self.label_18.setGeometry(QtCore.QRect(246, 60, 51, 20))
        font = QtGui.QFont()
        font.setItalic(True)
        self.label_18.setFont(font)
        self.label_18.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_18.setObjectName("label_18")
        self.pushButton_smiles_input = QtWidgets.QPushButton(self.tab_Smiles)
        self.pushButton_smiles_input.setGeometry(QtCore.QRect(538, 29, 91, 23))
        self.pushButton_smiles_input.setObjectName("pushButton_smiles_input")
        self.label_19 = QtWidgets.QLabel(self.tab_Smiles)
        self.label_19.setGeometry(QtCore.QRect(13, 143, 67, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_19.setFont(font)
        self.label_19.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_19.setObjectName("label_19")
        self.label_20 = QtWidgets.QLabel(self.tab_Smiles)
        self.label_20.setGeometry(QtCore.QRect(13, 234, 71, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_20.setFont(font)
        self.label_20.setObjectName("label_20")
        self.lineEdit_smiles_output = QtWidgets.QLineEdit(self.tab_Smiles)
        self.lineEdit_smiles_output.setGeometry(QtCore.QRect(92, 165, 391, 21))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.lineEdit_smiles_output.setFont(font)
        self.lineEdit_smiles_output.setObjectName("lineEdit_smiles_output")
        self.label_21 = QtWidgets.QLabel(self.tab_Smiles)
        self.label_21.setGeometry(QtCore.QRect(10, 169, 67, 17))
        self.label_21.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_21.setObjectName("label_21")
        self.label_22 = QtWidgets.QLabel(self.tab_Smiles)
        self.label_22.setGeometry(QtCore.QRect(-33, 60, 111, 20))
        self.label_22.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_22.setObjectName("label_22")
        self.line_6 = QtWidgets.QFrame(self.tab_Smiles)
        self.line_6.setGeometry(QtCore.QRect(0, 320, 640, 3))
        self.line_6.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_6.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_6.setObjectName("line_6")
        self.commandLinkButton_smiles_run = QtWidgets.QCommandLinkButton(self.tab_Smiles)
        self.commandLinkButton_smiles_run.setGeometry(QtCore.QRect(230, 330, 181, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.commandLinkButton_smiles_run.setFont(font)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("../img/run.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.commandLinkButton_smiles_run.setIcon(icon)
        self.commandLinkButton_smiles_run.setIconSize(QtCore.QSize(36, 36))
        self.commandLinkButton_smiles_run.setObjectName("commandLinkButton_smiles_run")
        self.label_23 = QtWidgets.QLabel(self.tab_Smiles)
        self.label_23.setGeometry(QtCore.QRect(94, 62, 61, 17))
        font = QtGui.QFont()
        font.setItalic(True)
        self.label_23.setFont(font)
        self.label_23.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_23.setObjectName("label_23")
        self.tabWidget.addTab(self.tab_Smiles, "")
        self.tab_LigFlow = QtWidgets.QWidget()
        self.tab_LigFlow.setObjectName("tab_LigFlow")
        self.pushButton_ligflow_lig = QtWidgets.QPushButton(self.tab_LigFlow)
        self.pushButton_ligflow_lig.setGeometry(QtCore.QRect(538, 39, 91, 23))
        self.pushButton_ligflow_lig.setWhatsThis("")
        self.pushButton_ligflow_lig.setObjectName("pushButton_ligflow_lig")
        self.label_inputFiles_2 = QtWidgets.QLabel(self.tab_LigFlow)
        self.label_inputFiles_2.setGeometry(QtCore.QRect(13, 10, 81, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_inputFiles_2.setFont(font)
        self.label_inputFiles_2.setObjectName("label_inputFiles_2")
        self.label_lig_2 = QtWidgets.QLabel(self.tab_LigFlow)
        self.label_lig_2.setGeometry(QtCore.QRect(13, 40, 65, 20))
        self.label_lig_2.setWhatsThis("")
        self.label_lig_2.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_lig_2.setObjectName("label_lig_2")
        self.lineEdit_ligflow_lig = QtWidgets.QLineEdit(self.tab_LigFlow)
        self.lineEdit_ligflow_lig.setGeometry(QtCore.QRect(92, 40, 441, 21))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.lineEdit_ligflow_lig.setFont(font)
        self.lineEdit_ligflow_lig.setWhatsThis("")
        self.lineEdit_ligflow_lig.setAccessibleName("")
        self.lineEdit_ligflow_lig.setObjectName("lineEdit_ligflow_lig")
        self.label_protocol = QtWidgets.QLabel(self.tab_LigFlow)
        self.label_protocol.setGeometry(QtCore.QRect(13, 80, 231, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_protocol.setFont(font)
        self.label_protocol.setObjectName("label_protocol")
        self.label_13 = QtWidgets.QLabel(self.tab_LigFlow)
        self.label_13.setGeometry(QtCore.QRect(-54, 184, 131, 17))
        self.label_13.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_13.setObjectName("label_13")
        self.comboBox_ligflow_job_queue = QtWidgets.QComboBox(self.tab_LigFlow)
        self.comboBox_ligflow_job_queue.setGeometry(QtCore.QRect(91, 180, 111, 26))
        self.comboBox_ligflow_job_queue.setObjectName("comboBox_ligflow_job_queue")
        self.comboBox_ligflow_job_queue.addItem("")
        self.comboBox_ligflow_job_queue.addItem("")
        self.comboBox_ligflow_job_queue.addItem("")
        self.pushButton_ligflow_configure_job_queue = QtWidgets.QPushButton(self.tab_LigFlow)
        self.pushButton_ligflow_configure_job_queue.setEnabled(True)
        self.pushButton_ligflow_configure_job_queue.setGeometry(QtCore.QRect(206, 180, 91, 26))
        self.pushButton_ligflow_configure_job_queue.setObjectName("pushButton_ligflow_configure_job_queue")
        self.label_14 = QtWidgets.QLabel(self.tab_LigFlow)
        self.label_14.setGeometry(QtCore.QRect(13, 152, 181, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_14.setFont(font)
        self.label_14.setObjectName("label_14")
        self.line_3 = QtWidgets.QFrame(self.tab_LigFlow)
        self.line_3.setGeometry(QtCore.QRect(0, 320, 640, 3))
        self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_3.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_3.setObjectName("line_3")
        self.commandLinkButton_ligflow_run = QtWidgets.QCommandLinkButton(self.tab_LigFlow)
        self.commandLinkButton_ligflow_run.setGeometry(QtCore.QRect(210, 330, 211, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.commandLinkButton_ligflow_run.setFont(font)
        self.commandLinkButton_ligflow_run.setIcon(icon)
        self.commandLinkButton_ligflow_run.setIconSize(QtCore.QSize(36, 36))
        self.commandLinkButton_ligflow_run.setObjectName("commandLinkButton_ligflow_run")
        self.comboBox_charges = QtWidgets.QComboBox(self.tab_LigFlow)
        self.comboBox_charges.setGeometry(QtCore.QRect(91, 109, 111, 26))
        self.comboBox_charges.setObjectName("comboBox_charges")
        self.comboBox_charges.addItem("")
        self.comboBox_charges.addItem("")
        self.comboBox_charges.addItem("")
        self.label_15 = QtWidgets.QLabel(self.tab_LigFlow)
        self.label_15.setGeometry(QtCore.QRect(7, 111, 71, 20))
        self.label_15.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_15.setObjectName("label_15")
        self.tabWidget.addTab(self.tab_LigFlow, "")
        self.tab_DockFlow = QtWidgets.QWidget()
        self.tab_DockFlow.setObjectName("tab_DockFlow")
        self.comboBox_docking_software = QtWidgets.QComboBox(self.tab_DockFlow)
        self.comboBox_docking_software.setGeometry(QtCore.QRect(92, 148, 221, 26))
        self.comboBox_docking_software.setObjectName("comboBox_docking_software")
        self.comboBox_docking_software.addItem("")
        self.comboBox_docking_software.addItem("")
        self.label_dockingKeep = QtWidgets.QLabel(self.tab_DockFlow)
        self.label_dockingKeep.setGeometry(QtCore.QRect(37, 179, 41, 31))
        self.label_dockingKeep.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_dockingKeep.setObjectName("label_dockingKeep")
        self.label_docking = QtWidgets.QLabel(self.tab_DockFlow)
        self.label_docking.setGeometry(QtCore.QRect(13, 98, 131, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_docking.setFont(font)
        self.label_docking.setObjectName("label_docking")
        self.spinBox_docking_nposes = QtWidgets.QSpinBox(self.tab_DockFlow)
        self.spinBox_docking_nposes.setGeometry(QtCore.QRect(92, 180, 70, 31))
        self.spinBox_docking_nposes.setMinimum(1)
        self.spinBox_docking_nposes.setMaximum(99999)
        self.spinBox_docking_nposes.setProperty("value", 10)
        self.spinBox_docking_nposes.setObjectName("spinBox_docking_nposes")
        self.label_dockingKeep_2 = QtWidgets.QLabel(self.tab_DockFlow)
        self.label_dockingKeep_2.setGeometry(QtCore.QRect(170, 180, 151, 31))
        self.label_dockingKeep_2.setObjectName("label_dockingKeep_2")
        self.pushButton_docking_configure_protocol = QtWidgets.QPushButton(self.tab_DockFlow)
        self.pushButton_docking_configure_protocol.setEnabled(True)
        self.pushButton_docking_configure_protocol.setGeometry(QtCore.QRect(317, 148, 91, 26))
        self.pushButton_docking_configure_protocol.setObjectName("pushButton_docking_configure_protocol")
        self.label_dockingSoftware = QtWidgets.QLabel(self.tab_DockFlow)
        self.label_dockingSoftware.setGeometry(QtCore.QRect(7, 150, 71, 20))
        self.label_dockingSoftware.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_dockingSoftware.setObjectName("label_dockingSoftware")
        self.label_inputFiles = QtWidgets.QLabel(self.tab_DockFlow)
        self.label_inputFiles.setGeometry(QtCore.QRect(13, 10, 75, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_inputFiles.setFont(font)
        self.label_inputFiles.setObjectName("label_inputFiles")
        self.pushButton_docking_lig = QtWidgets.QPushButton(self.tab_DockFlow)
        self.pushButton_docking_lig.setGeometry(QtCore.QRect(538, 59, 91, 23))
        self.pushButton_docking_lig.setWhatsThis("")
        self.pushButton_docking_lig.setObjectName("pushButton_docking_lig")
        self.label_lig = QtWidgets.QLabel(self.tab_DockFlow)
        self.label_lig.setGeometry(QtCore.QRect(13, 60, 65, 20))
        self.label_lig.setWhatsThis("")
        self.label_lig.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_lig.setObjectName("label_lig")
        self.pushButton_docking_rec = QtWidgets.QPushButton(self.tab_DockFlow)
        self.pushButton_docking_rec.setGeometry(QtCore.QRect(538, 29, 91, 23))
        self.pushButton_docking_rec.setWhatsThis("")
        self.pushButton_docking_rec.setObjectName("pushButton_docking_rec")
        self.label_rec = QtWidgets.QLabel(self.tab_DockFlow)
        self.label_rec.setGeometry(QtCore.QRect(13, 30, 65, 20))
        self.label_rec.setWhatsThis("")
        self.label_rec.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_rec.setObjectName("label_rec")
        self.label = QtWidgets.QLabel(self.tab_DockFlow)
        self.label.setGeometry(QtCore.QRect(13, 227, 181, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.label_3 = QtWidgets.QLabel(self.tab_DockFlow)
        self.label_3.setGeometry(QtCore.QRect(22, 122, 56, 17))
        self.label_3.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_3.setObjectName("label_3")
        self.lineEdit_docking_protocol = QtWidgets.QLineEdit(self.tab_DockFlow)
        self.lineEdit_docking_protocol.setGeometry(QtCore.QRect(92, 120, 316, 21))
        self.lineEdit_docking_protocol.setWhatsThis("")
        self.lineEdit_docking_protocol.setObjectName("lineEdit_docking_protocol")
        self.lineEdit_docking_rec = QtWidgets.QLineEdit(self.tab_DockFlow)
        self.lineEdit_docking_rec.setGeometry(QtCore.QRect(92, 30, 441, 21))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.lineEdit_docking_rec.setFont(font)
        self.lineEdit_docking_rec.setObjectName("lineEdit_docking_rec")
        self.lineEdit_docking_lig = QtWidgets.QLineEdit(self.tab_DockFlow)
        self.lineEdit_docking_lig.setGeometry(QtCore.QRect(92, 60, 441, 21))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.lineEdit_docking_lig.setFont(font)
        self.lineEdit_docking_lig.setObjectName("lineEdit_docking_lig")
        self.label_4 = QtWidgets.QLabel(self.tab_DockFlow)
        self.label_4.setGeometry(QtCore.QRect(-53, 257, 131, 17))
        self.label_4.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_4.setObjectName("label_4")
        self.comboBox_docking_job_queue = QtWidgets.QComboBox(self.tab_DockFlow)
        self.comboBox_docking_job_queue.setGeometry(QtCore.QRect(92, 253, 111, 26))
        self.comboBox_docking_job_queue.setObjectName("comboBox_docking_job_queue")
        self.comboBox_docking_job_queue.addItem("")
        self.comboBox_docking_job_queue.addItem("")
        self.comboBox_docking_job_queue.addItem("")
        self.pushButton_docking_configure_job_queue = QtWidgets.QPushButton(self.tab_DockFlow)
        self.pushButton_docking_configure_job_queue.setEnabled(True)
        self.pushButton_docking_configure_job_queue.setGeometry(QtCore.QRect(207, 253, 91, 26))
        self.pushButton_docking_configure_job_queue.setObjectName("pushButton_docking_configure_job_queue")
        self.checkBox_overwrite_docking = QtWidgets.QCheckBox(self.tab_DockFlow)
        self.checkBox_overwrite_docking.setGeometry(QtCore.QRect(90, 287, 251, 22))
        self.checkBox_overwrite_docking.setObjectName("checkBox_overwrite_docking")
        self.line_df = QtWidgets.QFrame(self.tab_DockFlow)
        self.line_df.setGeometry(QtCore.QRect(0, 320, 640, 3))
        self.line_df.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_df.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_df.setObjectName("line_df")
        self.commandLinkButton_docking_run = QtWidgets.QCommandLinkButton(self.tab_DockFlow)
        self.commandLinkButton_docking_run.setGeometry(QtCore.QRect(100, 330, 111, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.commandLinkButton_docking_run.setFont(font)
        self.commandLinkButton_docking_run.setIcon(icon)
        self.commandLinkButton_docking_run.setIconSize(QtCore.QSize(36, 36))
        self.commandLinkButton_docking_run.setObjectName("commandLinkButton_docking_run")
        self.commandLinkButton_docking_postprocess = QtWidgets.QCommandLinkButton(self.tab_DockFlow)
        self.commandLinkButton_docking_postprocess.setGeometry(QtCore.QRect(230, 330, 171, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.commandLinkButton_docking_postprocess.setFont(font)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("../img/process.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.commandLinkButton_docking_postprocess.setIcon(icon1)
        self.commandLinkButton_docking_postprocess.setIconSize(QtCore.QSize(36, 36))
        self.commandLinkButton_docking_postprocess.setObjectName("commandLinkButton_docking_postprocess")
        self.commandLinkButton_docking_archive = QtWidgets.QCommandLinkButton(self.tab_DockFlow)
        self.commandLinkButton_docking_archive.setGeometry(QtCore.QRect(430, 330, 131, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.commandLinkButton_docking_archive.setFont(font)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("../img/archive.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.commandLinkButton_docking_archive.setIcon(icon2)
        self.commandLinkButton_docking_archive.setIconSize(QtCore.QSize(36, 36))
        self.commandLinkButton_docking_archive.setObjectName("commandLinkButton_docking_archive")
        self.tabWidget.addTab(self.tab_DockFlow, "")
        self.tab_ScoreFlow = QtWidgets.QWidget()
        self.tab_ScoreFlow.setObjectName("tab_ScoreFlow")
        self.pushButton_scoring_rec = QtWidgets.QPushButton(self.tab_ScoreFlow)
        self.pushButton_scoring_rec.setGeometry(QtCore.QRect(538, 29, 91, 23))
        self.pushButton_scoring_rec.setWhatsThis("")
        self.pushButton_scoring_rec.setObjectName("pushButton_scoring_rec")
        self.pushButton_scoring_configure_protocol = QtWidgets.QPushButton(self.tab_ScoreFlow)
        self.pushButton_scoring_configure_protocol.setEnabled(True)
        self.pushButton_scoring_configure_protocol.setGeometry(QtCore.QRect(317, 148, 91, 26))
        self.pushButton_scoring_configure_protocol.setObjectName("pushButton_scoring_configure_protocol")
        self.checkBox_overwrite_scoring = QtWidgets.QCheckBox(self.tab_ScoreFlow)
        self.checkBox_overwrite_scoring.setGeometry(QtCore.QRect(90, 250, 251, 22))
        self.checkBox_overwrite_scoring.setObjectName("checkBox_overwrite_scoring")
        self.comboBox_scoring_job_queue = QtWidgets.QComboBox(self.tab_ScoreFlow)
        self.comboBox_scoring_job_queue.setGeometry(QtCore.QRect(92, 216, 111, 26))
        self.comboBox_scoring_job_queue.setObjectName("comboBox_scoring_job_queue")
        self.comboBox_scoring_job_queue.addItem("")
        self.comboBox_scoring_job_queue.addItem("")
        self.comboBox_scoring_job_queue.addItem("")
        self.label_dockingSoftware_3 = QtWidgets.QLabel(self.tab_ScoreFlow)
        self.label_dockingSoftware_3.setGeometry(QtCore.QRect(7, 150, 71, 20))
        self.label_dockingSoftware_3.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_dockingSoftware_3.setObjectName("label_dockingSoftware_3")
        self.lineEdit_scoring_rec = QtWidgets.QLineEdit(self.tab_ScoreFlow)
        self.lineEdit_scoring_rec.setGeometry(QtCore.QRect(92, 30, 441, 21))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.lineEdit_scoring_rec.setFont(font)
        self.lineEdit_scoring_rec.setObjectName("lineEdit_scoring_rec")
        self.label_docking_3 = QtWidgets.QLabel(self.tab_ScoreFlow)
        self.label_docking_3.setGeometry(QtCore.QRect(13, 98, 161, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_docking_3.setFont(font)
        self.label_docking_3.setObjectName("label_docking_3")
        self.lineEdit_scoring_protocol = QtWidgets.QLineEdit(self.tab_ScoreFlow)
        self.lineEdit_scoring_protocol.setGeometry(QtCore.QRect(92, 120, 316, 21))
        self.lineEdit_scoring_protocol.setWhatsThis("")
        self.lineEdit_scoring_protocol.setObjectName("lineEdit_scoring_protocol")
        self.label_rec_3 = QtWidgets.QLabel(self.tab_ScoreFlow)
        self.label_rec_3.setGeometry(QtCore.QRect(13, 30, 65, 20))
        self.label_rec_3.setWhatsThis("")
        self.label_rec_3.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_rec_3.setObjectName("label_rec_3")
        self.pushButton_scoring_lig = QtWidgets.QPushButton(self.tab_ScoreFlow)
        self.pushButton_scoring_lig.setGeometry(QtCore.QRect(538, 59, 91, 23))
        self.pushButton_scoring_lig.setWhatsThis("")
        self.pushButton_scoring_lig.setObjectName("pushButton_scoring_lig")
        self.commandLinkButton_scoring_postprocess = QtWidgets.QCommandLinkButton(self.tab_ScoreFlow)
        self.commandLinkButton_scoring_postprocess.setEnabled(True)
        self.commandLinkButton_scoring_postprocess.setGeometry(QtCore.QRect(230, 330, 171, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.commandLinkButton_scoring_postprocess.setFont(font)
        self.commandLinkButton_scoring_postprocess.setIcon(icon1)
        self.commandLinkButton_scoring_postprocess.setIconSize(QtCore.QSize(36, 36))
        self.commandLinkButton_scoring_postprocess.setObjectName("commandLinkButton_scoring_postprocess")
        self.lineEdit_scoring_lig = QtWidgets.QLineEdit(self.tab_ScoreFlow)
        self.lineEdit_scoring_lig.setGeometry(QtCore.QRect(92, 60, 441, 21))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.lineEdit_scoring_lig.setFont(font)
        self.lineEdit_scoring_lig.setObjectName("lineEdit_scoring_lig")
        self.pushButton_scoring_configure_job_queue = QtWidgets.QPushButton(self.tab_ScoreFlow)
        self.pushButton_scoring_configure_job_queue.setEnabled(True)
        self.pushButton_scoring_configure_job_queue.setGeometry(QtCore.QRect(207, 216, 91, 26))
        self.pushButton_scoring_configure_job_queue.setObjectName("pushButton_scoring_configure_job_queue")
        self.label_6 = QtWidgets.QLabel(self.tab_ScoreFlow)
        self.label_6.setGeometry(QtCore.QRect(-53, 220, 131, 17))
        self.label_6.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_6.setObjectName("label_6")
        self.line_4 = QtWidgets.QFrame(self.tab_ScoreFlow)
        self.line_4.setGeometry(QtCore.QRect(0, 320, 640, 3))
        self.line_4.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_4.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_4.setObjectName("line_4")
        self.label_inputFiles_5 = QtWidgets.QLabel(self.tab_ScoreFlow)
        self.label_inputFiles_5.setGeometry(QtCore.QRect(13, 10, 75, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_inputFiles_5.setFont(font)
        self.label_inputFiles_5.setObjectName("label_inputFiles_5")
        self.commandLinkButton_scoring_archive = QtWidgets.QCommandLinkButton(self.tab_ScoreFlow)
        self.commandLinkButton_scoring_archive.setEnabled(True)
        self.commandLinkButton_scoring_archive.setGeometry(QtCore.QRect(430, 330, 131, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.commandLinkButton_scoring_archive.setFont(font)
        self.commandLinkButton_scoring_archive.setIcon(icon2)
        self.commandLinkButton_scoring_archive.setIconSize(QtCore.QSize(36, 36))
        self.commandLinkButton_scoring_archive.setObjectName("commandLinkButton_scoring_archive")
        self.label_16 = QtWidgets.QLabel(self.tab_ScoreFlow)
        self.label_16.setGeometry(QtCore.QRect(13, 190, 181, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_16.setFont(font)
        self.label_16.setObjectName("label_16")
        self.comboBox_scoring_software = QtWidgets.QComboBox(self.tab_ScoreFlow)
        self.comboBox_scoring_software.setGeometry(QtCore.QRect(92, 148, 221, 26))
        self.comboBox_scoring_software.setObjectName("comboBox_scoring_software")
        self.comboBox_scoring_software.addItem("")
        self.comboBox_scoring_software.addItem("")
        self.comboBox_scoring_software.addItem("")
        self.commandLinkButton_scoring_run = QtWidgets.QCommandLinkButton(self.tab_ScoreFlow)
        self.commandLinkButton_scoring_run.setEnabled(True)
        self.commandLinkButton_scoring_run.setGeometry(QtCore.QRect(77, 330, 134, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.commandLinkButton_scoring_run.setFont(font)
        self.commandLinkButton_scoring_run.setIcon(icon)
        self.commandLinkButton_scoring_run.setIconSize(QtCore.QSize(36, 36))
        self.commandLinkButton_scoring_run.setObjectName("commandLinkButton_scoring_run")
        self.label_17 = QtWidgets.QLabel(self.tab_ScoreFlow)
        self.label_17.setGeometry(QtCore.QRect(22, 122, 56, 17))
        self.label_17.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_17.setObjectName("label_17")
        self.label_lig_5 = QtWidgets.QLabel(self.tab_ScoreFlow)
        self.label_lig_5.setGeometry(QtCore.QRect(13, 60, 65, 20))
        self.label_lig_5.setWhatsThis("")
        self.label_lig_5.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_lig_5.setObjectName("label_lig_5")
        self.tabWidget.addTab(self.tab_ScoreFlow, "")
        self.tab_Tools = QtWidgets.QWidget()
        self.tab_Tools.setObjectName("tab_Tools")
        self.label_7 = QtWidgets.QLabel(self.tab_Tools)
        self.label_7.setGeometry(QtCore.QRect(13, 10, 67, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_7.setFont(font)
        self.label_7.setObjectName("label_7")
        self.label_8 = QtWidgets.QLabel(self.tab_Tools)
        self.label_8.setGeometry(QtCore.QRect(14, 70, 91, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_8.setFont(font)
        self.label_8.setObjectName("label_8")
        self.comboBox_tools = QtWidgets.QComboBox(self.tab_Tools)
        self.comboBox_tools.setGeometry(QtCore.QRect(30, 35, 321, 27))
        self.comboBox_tools.setCurrentText("")
        self.comboBox_tools.setFrame(True)
        self.comboBox_tools.setObjectName("comboBox_tools")
        self.comboBox_tools.addItem("")
        self.label_tools_description = QtWidgets.QLabel(self.tab_Tools)
        self.label_tools_description.setGeometry(QtCore.QRect(20, 94, 595, 211))
        self.label_tools_description.setText("")
        self.label_tools_description.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.label_tools_description.setWordWrap(True)
        self.label_tools_description.setObjectName("label_tools_description")
        self.pushButton_configure_tools = QtWidgets.QPushButton(self.tab_Tools)
        self.pushButton_configure_tools.setGeometry(QtCore.QRect(360, 35, 99, 27))
        self.pushButton_configure_tools.setObjectName("pushButton_configure_tools")
        self.line_5 = QtWidgets.QFrame(self.tab_Tools)
        self.line_5.setGeometry(QtCore.QRect(0, 320, 640, 3))
        self.line_5.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_5.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_5.setObjectName("line_5")
        self.commandLinkButton_tools_run = QtWidgets.QCommandLinkButton(self.tab_Tools)
        self.commandLinkButton_tools_run.setGeometry(QtCore.QRect(268, 330, 101, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.commandLinkButton_tools_run.setFont(font)
        self.commandLinkButton_tools_run.setIcon(icon)
        self.commandLinkButton_tools_run.setIconSize(QtCore.QSize(36, 36))
        self.commandLinkButton_tools_run.setObjectName("commandLinkButton_tools_run")
        self.tabWidget.addTab(self.tab_Tools, "")
        self.tab_Output = QtWidgets.QWidget()
        self.tab_Output.setObjectName("tab_Output")
        self.output_display = QtWidgets.QPlainTextEdit(self.tab_Output)
        self.output_display.setGeometry(QtCore.QRect(-1, 38, 640, 351))
        self.output_display.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.output_display.setAutoFillBackground(False)
        self.output_display.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.output_display.setTabChangesFocus(False)
        self.output_display.setReadOnly(True)
        self.output_display.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextSelectableByMouse)
        self.output_display.setObjectName("output_display")
        self.lineEdit_command = QtWidgets.QLineEdit(self.tab_Output)
        self.lineEdit_command.setGeometry(QtCore.QRect(79, 5, 351, 27))
        self.lineEdit_command.setReadOnly(True)
        self.lineEdit_command.setObjectName("lineEdit_command")
        self.label_2 = QtWidgets.QLabel(self.tab_Output)
        self.label_2.setGeometry(QtCore.QRect(0, 8, 73, 20))
        self.label_2.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_2.setObjectName("label_2")
        self.label_5 = QtWidgets.QLabel(self.tab_Output)
        self.label_5.setGeometry(QtCore.QRect(430, 8, 51, 20))
        self.label_5.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_5.setObjectName("label_5")
        self.lineEdit_status = QtWidgets.QLineEdit(self.tab_Output)
        self.lineEdit_status.setGeometry(QtCore.QRect(487, 5, 91, 27))
        self.lineEdit_status.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_status.setReadOnly(True)
        self.lineEdit_status.setObjectName("lineEdit_status")
        self.pushButton_kill = QtWidgets.QPushButton(self.tab_Output)
        self.pushButton_kill.setEnabled(False)
        self.pushButton_kill.setGeometry(QtCore.QRect(583, 5, 51, 27))
        self.pushButton_kill.setObjectName("pushButton_kill")
        self.tabWidget.addTab(self.tab_Output, "")
        MainWindow.setCentralWidget(self.centralWidget)
        self.menuBar = QtWidgets.QMenuBar(MainWindow)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 662, 25))
        self.menuBar.setObjectName("menuBar")
        self.menuProject = QtWidgets.QMenu(self.menuBar)
        self.menuProject.setObjectName("menuProject")
        self.menuHelp = QtWidgets.QMenu(self.menuBar)
        self.menuHelp.setObjectName("menuHelp")
        self.menuAspect = QtWidgets.QMenu(self.menuBar)
        self.menuAspect.setObjectName("menuAspect")
        self.menuTheme = QtWidgets.QMenu(self.menuAspect)
        self.menuTheme.setObjectName("menuTheme")
        MainWindow.setMenuBar(self.menuBar)
        self.statusBar = QtWidgets.QStatusBar(MainWindow)
        self.statusBar.setObjectName("statusBar")
        MainWindow.setStatusBar(self.statusBar)
        self.actionNew_project = QtWidgets.QAction(MainWindow)
        self.actionNew_project.setObjectName("actionNew_project")
        self.actionLoad_project = QtWidgets.QAction(MainWindow)
        self.actionLoad_project.setObjectName("actionLoad_project")
        self.actionGitHub = QtWidgets.QAction(MainWindow)
        self.actionGitHub.setObjectName("actionGitHub")
        self.actionReport_issue = QtWidgets.QAction(MainWindow)
        self.actionReport_issue.setObjectName("actionReport_issue")
        self.actionTutorial = QtWidgets.QAction(MainWindow)
        self.actionTutorial.setObjectName("actionTutorial")
        self.actionAbout = QtWidgets.QAction(MainWindow)
        self.actionAbout.setObjectName("actionAbout")
        self.actionDebug_mode = QtWidgets.QAction(MainWindow)
        self.actionDebug_mode.setObjectName("actionDebug_mode")
        self.actionExit = QtWidgets.QAction(MainWindow)
        self.actionExit.setObjectName("actionExit")
        self.actionLogfile = QtWidgets.QAction(MainWindow)
        self.actionLogfile.setObjectName("actionLogfile")
        self.actionDefault_theme = QtWidgets.QAction(MainWindow)
        self.actionDefault_theme.setObjectName("actionDefault_theme")
        self.actionDark_theme = QtWidgets.QAction(MainWindow)
        self.actionDark_theme.setObjectName("actionDark_theme")
        self.actionDocumentation = QtWidgets.QAction(MainWindow)
        self.actionDocumentation.setObjectName("actionDocumentation")
        self.menuProject.addAction(self.actionNew_project)
        self.menuProject.addAction(self.actionLoad_project)
        self.menuProject.addSeparator()
        self.menuProject.addAction(self.actionExit)
        self.menuHelp.addAction(self.actionDocumentation)
        self.menuHelp.addAction(self.actionTutorial)
        self.menuHelp.addAction(self.actionGitHub)
        self.menuHelp.addAction(self.actionReport_issue)
        self.menuHelp.addSeparator()
        self.menuHelp.addAction(self.actionDebug_mode)
        self.menuHelp.addAction(self.actionLogfile)
        self.menuHelp.addSeparator()
        self.menuHelp.addAction(self.actionAbout)
        self.menuTheme.addAction(self.actionDefault_theme)
        self.menuTheme.addSeparator()
        self.menuTheme.addAction(self.actionDark_theme)
        self.menuAspect.addAction(self.menuTheme.menuAction())
        self.menuBar.addAction(self.menuProject.menuAction())
        self.menuBar.addAction(self.menuAspect.menuAction())
        self.menuBar.addAction(self.menuHelp.menuAction())

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        self.comboBox_tools.setCurrentIndex(-1)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        MainWindow.setTabOrder(self.tabWidget, self.lineEdit_smiles_input)
        MainWindow.setTabOrder(self.lineEdit_smiles_input, self.pushButton_smiles_input)
        MainWindow.setTabOrder(self.pushButton_smiles_input, self.spinBox_smiles_col)
        MainWindow.setTabOrder(self.spinBox_smiles_col, self.spinBox_names_col)
        MainWindow.setTabOrder(self.spinBox_names_col, self.comboBox_delimiter)
        MainWindow.setTabOrder(self.comboBox_delimiter, self.checkBox_header)
        MainWindow.setTabOrder(self.checkBox_header, self.lineEdit_smiles_output)
        MainWindow.setTabOrder(self.lineEdit_smiles_output, self.checkBox_hydrogen)
        MainWindow.setTabOrder(self.checkBox_hydrogen, self.checkBox_verbose)
        MainWindow.setTabOrder(self.checkBox_verbose, self.comboBox_method)
        MainWindow.setTabOrder(self.comboBox_method, self.spinBox_nthreads)
        MainWindow.setTabOrder(self.spinBox_nthreads, self.checkBox_mpi)
        MainWindow.setTabOrder(self.checkBox_mpi, self.commandLinkButton_smiles_run)
        MainWindow.setTabOrder(self.commandLinkButton_smiles_run, self.lineEdit_ligflow_lig)
        MainWindow.setTabOrder(self.lineEdit_ligflow_lig, self.pushButton_ligflow_lig)
        MainWindow.setTabOrder(self.pushButton_ligflow_lig, self.comboBox_charges)
        MainWindow.setTabOrder(self.comboBox_charges, self.comboBox_ligflow_job_queue)
        MainWindow.setTabOrder(self.comboBox_ligflow_job_queue, self.pushButton_ligflow_configure_job_queue)
        MainWindow.setTabOrder(self.pushButton_ligflow_configure_job_queue, self.commandLinkButton_ligflow_run)
        MainWindow.setTabOrder(self.commandLinkButton_ligflow_run, self.lineEdit_docking_rec)
        MainWindow.setTabOrder(self.lineEdit_docking_rec, self.pushButton_docking_rec)
        MainWindow.setTabOrder(self.pushButton_docking_rec, self.lineEdit_docking_lig)
        MainWindow.setTabOrder(self.lineEdit_docking_lig, self.pushButton_docking_lig)
        MainWindow.setTabOrder(self.pushButton_docking_lig, self.lineEdit_docking_protocol)
        MainWindow.setTabOrder(self.lineEdit_docking_protocol, self.comboBox_docking_software)
        MainWindow.setTabOrder(self.comboBox_docking_software, self.pushButton_docking_configure_protocol)
        MainWindow.setTabOrder(self.pushButton_docking_configure_protocol, self.spinBox_docking_nposes)
        MainWindow.setTabOrder(self.spinBox_docking_nposes, self.comboBox_docking_job_queue)
        MainWindow.setTabOrder(self.comboBox_docking_job_queue, self.pushButton_docking_configure_job_queue)
        MainWindow.setTabOrder(self.pushButton_docking_configure_job_queue, self.checkBox_overwrite_docking)
        MainWindow.setTabOrder(self.checkBox_overwrite_docking, self.commandLinkButton_docking_run)
        MainWindow.setTabOrder(self.commandLinkButton_docking_run, self.commandLinkButton_docking_postprocess)
        MainWindow.setTabOrder(self.commandLinkButton_docking_postprocess, self.commandLinkButton_docking_archive)
        MainWindow.setTabOrder(self.commandLinkButton_docking_archive, self.lineEdit_scoring_rec)
        MainWindow.setTabOrder(self.lineEdit_scoring_rec, self.pushButton_scoring_rec)
        MainWindow.setTabOrder(self.pushButton_scoring_rec, self.lineEdit_scoring_lig)
        MainWindow.setTabOrder(self.lineEdit_scoring_lig, self.pushButton_scoring_lig)
        MainWindow.setTabOrder(self.pushButton_scoring_lig, self.lineEdit_scoring_protocol)
        MainWindow.setTabOrder(self.lineEdit_scoring_protocol, self.comboBox_scoring_software)
        MainWindow.setTabOrder(self.comboBox_scoring_software, self.pushButton_scoring_configure_protocol)
        MainWindow.setTabOrder(self.pushButton_scoring_configure_protocol, self.comboBox_scoring_job_queue)
        MainWindow.setTabOrder(self.comboBox_scoring_job_queue, self.pushButton_scoring_configure_job_queue)
        MainWindow.setTabOrder(self.pushButton_scoring_configure_job_queue, self.checkBox_overwrite_scoring)
        MainWindow.setTabOrder(self.checkBox_overwrite_scoring, self.commandLinkButton_scoring_run)
        MainWindow.setTabOrder(self.commandLinkButton_scoring_run, self.commandLinkButton_scoring_postprocess)
        MainWindow.setTabOrder(self.commandLinkButton_scoring_postprocess, self.commandLinkButton_scoring_archive)
        MainWindow.setTabOrder(self.commandLinkButton_scoring_archive, self.comboBox_tools)
        MainWindow.setTabOrder(self.comboBox_tools, self.pushButton_configure_tools)
        MainWindow.setTabOrder(self.pushButton_configure_tools, self.commandLinkButton_tools_run)
        MainWindow.setTabOrder(self.commandLinkButton_tools_run, self.lineEdit_command)
        MainWindow.setTabOrder(self.lineEdit_command, self.lineEdit_status)
        MainWindow.setTabOrder(self.lineEdit_status, self.pushButton_kill)
        MainWindow.setTabOrder(self.pushButton_kill, self.output_display)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "ChemFlow"))
        self.label_logo_text.setText(_translate("MainWindow", "ChemFlow"))
        self.label_9.setText(_translate("MainWindow", "Delimiter"))
        self.comboBox_method.setToolTip(_translate("MainWindow", "<html><head/><body><p>Method used to generate 3D conformations: </p><ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 1;\"><li style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">UFF</span> : distance geometry + force field minimization with UFF</li><li style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">MMFF</span> : distance geometry + force field minimization with MMFF</li><li style=\" margin-top:0px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">ETKDG </span>: distance geometry with experimental torsion angles knowledge from the CSD</li></ul></body></html>"))
        self.comboBox_method.setItemText(0, _translate("MainWindow", "ETKDG"))
        self.comboBox_method.setItemText(1, _translate("MainWindow", "MMFF"))
        self.comboBox_method.setItemText(2, _translate("MainWindow", "UFF"))
        self.checkBox_verbose.setToolTip(_translate("MainWindow", "<html><head/><body><p>Print additional information to the terminal</p></body></html>"))
        self.checkBox_verbose.setText(_translate("MainWindow", "Verbose output"))
        self.spinBox_smiles_col.setToolTip(_translate("MainWindow", "<html><head/><body><p>Index of the column containing the SMILES</p></body></html>"))
        self.comboBox_delimiter.setItemText(0, _translate("MainWindow", "Tab"))
        self.comboBox_delimiter.setItemText(1, _translate("MainWindow", "Space"))
        self.comboBox_delimiter.setItemText(2, _translate("MainWindow", ","))
        self.comboBox_delimiter.setItemText(3, _translate("MainWindow", ";"))
        self.comboBox_delimiter.setItemText(4, _translate("MainWindow", ":"))
        self.label_10.setText(_translate("MainWindow", "CPU threads"))
        self.checkBox_mpi.setText(_translate("MainWindow", "Run with MPI"))
        self.lineEdit_smiles_input.setPlaceholderText(_translate("MainWindow", "Path to input SMILES file"))
        self.checkBox_header.setText(_translate("MainWindow", "Fist line is a header"))
        self.checkBox_hydrogen.setText(_translate("MainWindow", "Write all Hydrogen atoms"))
        self.spinBox_names_col.setToolTip(_translate("MainWindow", "<html><head/><body><p>Index of the column containing the names of your molecules. Leave to 2 if there are no names.</p></body></html>"))
        self.label_rec_2.setText(_translate("MainWindow", "Input"))
        self.label_11.setText(_translate("MainWindow", "File"))
        self.label_12.setText(_translate("MainWindow", "Execution"))
        self.spinBox_nthreads.setToolTip(_translate("MainWindow", "<html><head/><body><p>Number of threads used for the generation of conformations</p></body></html>"))
        self.label_18.setText(_translate("MainWindow", "Name"))
        self.pushButton_smiles_input.setToolTip(_translate("MainWindow", "<html><head/><body><p>Text file containing one molecule in SMILES format per line.</p></body></html>"))
        self.pushButton_smiles_input.setText(_translate("MainWindow", "Browse"))
        self.label_19.setText(_translate("MainWindow", "Output"))
        self.label_20.setText(_translate("MainWindow", "Method"))
        self.lineEdit_smiles_output.setPlaceholderText(_translate("MainWindow", "Path to output SDF file"))
        self.label_21.setText(_translate("MainWindow", "File"))
        self.label_22.setText(_translate("MainWindow", "Index"))
        self.commandLinkButton_smiles_run.setToolTip(_translate("MainWindow", "<html><head/><body><p>Generates 3D structures in SDF format from SMILES, using RDKIT</p></body></html>"))
        self.commandLinkButton_smiles_run.setText(_translate("MainWindow", "Generate 3D"))
        self.label_23.setText(_translate("MainWindow", "SMILES"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_Smiles), _translate("MainWindow", "SmilesTo3D"))
        self.pushButton_ligflow_lig.setToolTip(_translate("MainWindow", "Ligands MOL2 file"))
        self.pushButton_ligflow_lig.setText(_translate("MainWindow", "Browse"))
        self.label_inputFiles_2.setText(_translate("MainWindow", "Input files"))
        self.label_lig_2.setToolTip(_translate("MainWindow", "Ligands MOL2 file"))
        self.label_lig_2.setText(_translate("MainWindow", "Ligands"))
        self.lineEdit_ligflow_lig.setToolTip(_translate("MainWindow", "Ligands MOL2 file"))
        self.lineEdit_ligflow_lig.setPlaceholderText(_translate("MainWindow", "Path to a MOL2 file"))
        self.label_protocol.setText(_translate("MainWindow", "Ligand preparation protocol"))
        self.label_13.setText(_translate("MainWindow", "Job queue"))
        self.comboBox_ligflow_job_queue.setToolTip(_translate("MainWindow", "<html><head/><body><p>Batch system used to control your jobs:<ul><li>None: run locally in parallel</li><li>PBS: Portable Batch System for UNIX clusters</li><li>SLURM: Slurm Workload Manager for HPC clusters</li></ul></p></body></html>"))
        self.comboBox_ligflow_job_queue.setItemText(0, _translate("MainWindow", "None"))
        self.comboBox_ligflow_job_queue.setItemText(1, _translate("MainWindow", "PBS"))
        self.comboBox_ligflow_job_queue.setItemText(2, _translate("MainWindow", "SLURM"))
        self.pushButton_ligflow_configure_job_queue.setToolTip(_translate("MainWindow", "<html><head/><body><p>Configure the number of cores used...etc.</p></body></html>"))
        self.pushButton_ligflow_configure_job_queue.setText(_translate("MainWindow", "Configure"))
        self.label_14.setText(_translate("MainWindow", "Configure execution"))
        self.commandLinkButton_ligflow_run.setToolTip(_translate("MainWindow", "<html><head/><body><p>Prepare the ligands</p></body></html>"))
        self.commandLinkButton_ligflow_run.setText(_translate("MainWindow", "Prepare ligands"))
        self.comboBox_charges.setItemText(0, _translate("MainWindow", "Gasteiger"))
        self.comboBox_charges.setItemText(1, _translate("MainWindow", "AM1-BCC"))
        self.comboBox_charges.setItemText(2, _translate("MainWindow", "RESP"))
        self.label_15.setText(_translate("MainWindow", "Charges"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_LigFlow), _translate("MainWindow", "LigFlow"))
        self.comboBox_docking_software.setToolTip(_translate("MainWindow", "Software used for docking"))
        self.comboBox_docking_software.setItemText(0, _translate("MainWindow", "AutoDock Vina"))
        self.comboBox_docking_software.setItemText(1, _translate("MainWindow", "PLANTS"))
        self.label_dockingKeep.setText(_translate("MainWindow", "Keep"))
        self.label_docking.setText(_translate("MainWindow", "Docking protocol"))
        self.spinBox_docking_nposes.setToolTip(_translate("MainWindow", "Number of docked poses to generate or keep"))
        self.label_dockingKeep_2.setText(_translate("MainWindow", "pose(s) per ligand"))
        self.pushButton_docking_configure_protocol.setToolTip(_translate("MainWindow", "Configure your docking protocol"))
        self.pushButton_docking_configure_protocol.setText(_translate("MainWindow", "Configure"))
        self.label_dockingSoftware.setText(_translate("MainWindow", "Software"))
        self.label_inputFiles.setText(_translate("MainWindow", "Input files"))
        self.pushButton_docking_lig.setToolTip(_translate("MainWindow", "Ligands MOL2 file"))
        self.pushButton_docking_lig.setText(_translate("MainWindow", "Browse"))
        self.label_lig.setToolTip(_translate("MainWindow", "Ligands MOL2 file"))
        self.label_lig.setText(_translate("MainWindow", "Ligands"))
        self.pushButton_docking_rec.setToolTip(_translate("MainWindow", "Receptor MOL2 file"))
        self.pushButton_docking_rec.setText(_translate("MainWindow", "Browse"))
        self.label_rec.setToolTip(_translate("MainWindow", "Receptor MOL2 file"))
        self.label_rec.setText(_translate("MainWindow", "Receptor"))
        self.label.setText(_translate("MainWindow", "Configure execution"))
        self.label_3.setToolTip(_translate("MainWindow", "Name for this specific protocol"))
        self.label_3.setText(_translate("MainWindow", "Name"))
        self.lineEdit_docking_protocol.setToolTip(_translate("MainWindow", "Name for this specific protocol"))
        self.lineEdit_docking_protocol.setText(_translate("MainWindow", "default"))
        self.lineEdit_docking_rec.setToolTip(_translate("MainWindow", "Receptor MOL2 file"))
        self.lineEdit_docking_rec.setPlaceholderText(_translate("MainWindow", "Path to a MOL2 file"))
        self.lineEdit_docking_lig.setToolTip(_translate("MainWindow", "Ligands MOL2 file"))
        self.lineEdit_docking_lig.setPlaceholderText(_translate("MainWindow", "Path to a MOL2 file"))
        self.label_4.setText(_translate("MainWindow", "Job queue"))
        self.comboBox_docking_job_queue.setToolTip(_translate("MainWindow", "<html><head/><body><p>Batch system used to control your jobs:<ul><li>None: run locally in parallel</li><li>PBS: Portable Batch System for UNIX clusters</li><li>SLURM: Slurm Workload Manager for HPC clusters</li></ul></p></body></html>"))
        self.comboBox_docking_job_queue.setItemText(0, _translate("MainWindow", "None"))
        self.comboBox_docking_job_queue.setItemText(1, _translate("MainWindow", "PBS"))
        self.comboBox_docking_job_queue.setItemText(2, _translate("MainWindow", "SLURM"))
        self.pushButton_docking_configure_job_queue.setToolTip(_translate("MainWindow", "<html><head/><body><p>Configure the number of cores used...etc.</p></body></html>"))
        self.pushButton_docking_configure_job_queue.setText(_translate("MainWindow", "Configure"))
        self.checkBox_overwrite_docking.setToolTip(_translate("MainWindow", "<html><head/><body><p>Overwrite results corresponding to the same project, protocol name and receptor name for DockFlow. Will overwrite docking poses, affinities... everything !</p><p><span style=\" font-style:italic;\">Usefull if you\'ve made an error in a protocol you\'ve just run and want to correct it without manually deleting files.</span></p></body></html>"))
        self.checkBox_overwrite_docking.setText(_translate("MainWindow", "Overwrite pre-existing results"))
        self.commandLinkButton_docking_run.setToolTip(_translate("MainWindow", "<html><head/><body><p>Run the docking experiment</p></body></html>"))
        self.commandLinkButton_docking_run.setText(_translate("MainWindow", "Dock"))
        self.commandLinkButton_docking_postprocess.setToolTip(_translate("MainWindow", "<html><head/><body><p>Process and standardize the outputs for the specified project, protocol, receptor, and scoring function</p></body></html>"))
        self.commandLinkButton_docking_postprocess.setText(_translate("MainWindow", "Postprocess"))
        self.commandLinkButton_docking_archive.setToolTip(_translate("MainWindow", "<html><head/><body><p>Compress all files from the specified project, protocol, and receptor in a single tar.gz archive</p></body></html>"))
        self.commandLinkButton_docking_archive.setText(_translate("MainWindow", "Archive"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_DockFlow), _translate("MainWindow", "DockFlow"))
        self.pushButton_scoring_rec.setToolTip(_translate("MainWindow", "Receptor MOL2 file"))
        self.pushButton_scoring_rec.setText(_translate("MainWindow", "Browse"))
        self.pushButton_scoring_configure_protocol.setToolTip(_translate("MainWindow", "<html><head/><body><p>Configure your rescoring protocol</p></body></html>"))
        self.pushButton_scoring_configure_protocol.setText(_translate("MainWindow", "Configure"))
        self.checkBox_overwrite_scoring.setToolTip(_translate("MainWindow", "<html><head/><body><p>Overwrite results corresponding to the same project, protocol name and receptor name for ScoreFlow.</p><p><span style=\" font-style:italic;\">Usefull if you\'ve made an error in a protocol you\'ve just run and want to correct it without manually deleting files.</span></p></body></html>"))
        self.checkBox_overwrite_scoring.setText(_translate("MainWindow", "Overwrite pre-existing results"))
        self.comboBox_scoring_job_queue.setToolTip(_translate("MainWindow", "<html><head/><body><p>Batch system used to control your jobs:<ul><li>None: run locally in parallel</li><li>PBS: Portable Batch System for UNIX clusters</li><li>SLURM: Slurm Workload Manager for HPC clusters</li></ul></p></body></html>"))
        self.comboBox_scoring_job_queue.setItemText(0, _translate("MainWindow", "None"))
        self.comboBox_scoring_job_queue.setItemText(1, _translate("MainWindow", "PBS"))
        self.comboBox_scoring_job_queue.setItemText(2, _translate("MainWindow", "SLURM"))
        self.label_dockingSoftware_3.setText(_translate("MainWindow", "Method"))
        self.lineEdit_scoring_rec.setToolTip(_translate("MainWindow", "Receptor MOL2 file"))
        self.lineEdit_scoring_rec.setPlaceholderText(_translate("MainWindow", "Path to a PDB or MOL2 file"))
        self.label_docking_3.setText(_translate("MainWindow", "Rescoring protocol"))
        self.lineEdit_scoring_protocol.setToolTip(_translate("MainWindow", "Name for this specific protocol"))
        self.lineEdit_scoring_protocol.setText(_translate("MainWindow", "default"))
        self.lineEdit_scoring_protocol.setPlaceholderText(_translate("MainWindow", "Name of your protocol"))
        self.label_rec_3.setToolTip(_translate("MainWindow", "Receptor MOL2 file"))
        self.label_rec_3.setText(_translate("MainWindow", "Receptor"))
        self.pushButton_scoring_lig.setToolTip(_translate("MainWindow", "Ligands MOL2 file"))
        self.pushButton_scoring_lig.setText(_translate("MainWindow", "Browse"))
        self.commandLinkButton_scoring_postprocess.setToolTip(_translate("MainWindow", "<html><head/><body><p>Process and standardize the outputs for the specified project, protocol, receptor, and scoring function</p></body></html>"))
        self.commandLinkButton_scoring_postprocess.setText(_translate("MainWindow", "Postprocess"))
        self.lineEdit_scoring_lig.setToolTip(_translate("MainWindow", "Ligands MOL2 file"))
        self.lineEdit_scoring_lig.setPlaceholderText(_translate("MainWindow", "Path to a MOL2 file"))
        self.pushButton_scoring_configure_job_queue.setToolTip(_translate("MainWindow", "<html><head/><body><p>Configure the number of cores used...etc.</p></body></html>"))
        self.pushButton_scoring_configure_job_queue.setText(_translate("MainWindow", "Configure"))
        self.label_6.setText(_translate("MainWindow", "Job queue"))
        self.label_inputFiles_5.setText(_translate("MainWindow", "Input files"))
        self.commandLinkButton_scoring_archive.setToolTip(_translate("MainWindow", "<html><head/><body><p>Compress all files from the specified project, protocol, and receptor in a single tar.gz archive</p></body></html>"))
        self.commandLinkButton_scoring_archive.setText(_translate("MainWindow", "Archive"))
        self.label_16.setText(_translate("MainWindow", "Configure execution"))
        self.comboBox_scoring_software.setToolTip(_translate("MainWindow", "<html><head/><body><p>Method or software used for rescoring</p></body></html>"))
        self.comboBox_scoring_software.setItemText(0, _translate("MainWindow", "MM/GBSA"))
        self.comboBox_scoring_software.setItemText(1, _translate("MainWindow", "AutoDock Vina"))
        self.comboBox_scoring_software.setItemText(2, _translate("MainWindow", "PLANTS"))
        self.commandLinkButton_scoring_run.setToolTip(_translate("MainWindow", "<html><head/><body><p>Run the rescoring experiment</p></body></html>"))
        self.commandLinkButton_scoring_run.setText(_translate("MainWindow", "Rescore"))
        self.label_17.setToolTip(_translate("MainWindow", "Name for this specific protocol"))
        self.label_17.setText(_translate("MainWindow", "Name"))
        self.label_lig_5.setToolTip(_translate("MainWindow", "Ligands MOL2 file"))
        self.label_lig_5.setText(_translate("MainWindow", "Ligands"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_ScoreFlow), _translate("MainWindow", "ScoreFlow"))
        self.label_7.setText(_translate("MainWindow", "Name"))
        self.label_8.setText(_translate("MainWindow", "Description"))
        self.comboBox_tools.setItemText(0, _translate("MainWindow", "Bounding shape"))
        self.pushButton_configure_tools.setText(_translate("MainWindow", "Configure"))
        self.commandLinkButton_tools_run.setToolTip(_translate("MainWindow", "<html><head/><body><p>Run the ChemFlow tool</p></body></html>"))
        self.commandLinkButton_tools_run.setText(_translate("MainWindow", "Run"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_Tools), _translate("MainWindow", "Tools"))
        self.label_2.setText(_translate("MainWindow", "Command"))
        self.label_5.setText(_translate("MainWindow", "Status"))
        self.pushButton_kill.setText(_translate("MainWindow", "Kill"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_Output), _translate("MainWindow", "Output"))
        self.menuProject.setTitle(_translate("MainWindow", "Project"))
        self.menuHelp.setTitle(_translate("MainWindow", "Help"))
        self.menuAspect.setTitle(_translate("MainWindow", "Aspect"))
        self.menuTheme.setTitle(_translate("MainWindow", "Theme"))
        self.actionNew_project.setText(_translate("MainWindow", "New project"))
        self.actionLoad_project.setText(_translate("MainWindow", "Load project"))
        self.actionGitHub.setText(_translate("MainWindow", "GitHub"))
        self.actionReport_issue.setText(_translate("MainWindow", "Report issue"))
        self.actionTutorial.setText(_translate("MainWindow", "Tutorial"))
        self.actionAbout.setText(_translate("MainWindow", "About"))
        self.actionDebug_mode.setText(_translate("MainWindow", "Debug mode"))
        self.actionExit.setText(_translate("MainWindow", "Exit"))
        self.actionLogfile.setText(_translate("MainWindow", "Logfile"))
        self.actionDefault_theme.setText(_translate("MainWindow", "Default theme"))
        self.actionDark_theme.setText(_translate("MainWindow", "Dark theme"))
        self.actionDocumentation.setText(_translate("MainWindow", "Documentation"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())

