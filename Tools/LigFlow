#!/bin/bash

#######################################################################
##################### Script for pose extraction ######################
#######################################################################
# Extract or prepare docking poses from PLANTS

#################
# Main
#################

# Color output
RED="\e[0;31m"
BLUE="\e[0;34m"
GREEN="\e[0;32m"
PURPLE="\e[0;35m"
NC="\033[0m"

# Time format
TIMEFORMAT='Execution time : %1lR'

# Create a time stamp, in order to make backups
datetime=$(date "+%Y%m%d%H%M%S")

# source files
source ${CHEMFLOW_HOME}/ChemFlow.config
source $CHEMFLOW_HOME/common/LigFlow_functions.bash
source $CHEMFLOW_HOME/common/mazinger_functions.bash
source $CHEMFLOW_HOME/common/ProgressBar.bash
source $CHEMFLOW_HOME/common/ChemFlow_functions.bash

# Run interface
LigFlow_CLI "$@"

# Set working directory
run_folder="$(cd "${path}"; cd ..; pwd)"

# Run
if [ "${restart_from_errors}" = "true" ]; then
  # Restart from errors
  error_restart
else
  # Run normally
  if [ "${purge_only}" = "true" ]; then
    only_purge_ligands
  else
    # Select the poses
    list_poses
    # Run the preparation and time it
    time prepare_poses
  fi
fi

# If some results are missing, count how many and output it
if [ -f ${run_folder}/errors.csv ]; then
  errorcount=$(cat ${run_folder}/errors.csv | wc -l)
  echo -e "${RED}ERRORS detected${NC} : ${errorcount}"
  echo "See errors.csv for more info"
else
  if [ "${run_mode}" = "parallel" ]; then rm -f ${run_folder}/LigFlow_${datetime}.parallel ${run_folder}/LigFlow_${datetime}.parallel.job; fi
fi
